## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Admin Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/Admin/Register
    metadata:
      groupName: 'Admin Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Register a new Admin.

        This endpoint allows you to register a new admin user by providing a name, email, and password.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the admin.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address of the admin. Must be a valid and unique email.'
        required: true
        example: admin@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password for the admin account. Must be at least 8 characters, include an uppercase letter, lowercase letter, digit, and special character.'
        required: true
        example: Password123!
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: admin@example.com
      password: Password123!
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": 1,
            "message": "Admin registered successfully",
            "admin": {
              "id": 1,
              "name": "John Doe",
              "email": "admin@example.com",
              "created_at": "2024-11-04T12:00:00.000000Z",
              "updated_at": "2024-11-04T12:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": 0,
            "error": "The email field is required."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": 0,
            "message": "Error while Register",
            "error": "Detailed error message."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/Admin/Login
    metadata:
      groupName: 'Admin Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Admin Login

        This endpoint allows an admin user to log in using their email and password. Upon successful authentication, a token is returned.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address of the admin.'
        required: true
        example: admin@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password for the admin account. Must be at least 8 characters, include an uppercase letter, lowercase letter, digit, and special character.'
        required: true
        example: Password123!
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: admin@example.com
      password: Password123!
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "access_token": "your_jwt_token_here",
            "token_type": "bearer",
            "expires_in": 3600
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": 0,
            "error": "Password does not match"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": 0,
            "error": "Email does not exist"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": 0,
            "message": "Error while Login",
            "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
